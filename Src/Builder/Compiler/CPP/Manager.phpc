<?
  $Loader->Parent_Class('/Object');
 
  class C_Builder_Compiler_CPP_Manager extends C_Object
  {
    Var $List=[];
    Var $Manager;
    
    Function _Init(Array $Args)
    {
      Parent::_Init($Args);
      
      $this->Manager=$Args['Manager'];
      
      $this->GetCompiler('VC'  );
      $this->GetCompiler('GCC' );
    }
    
    Function Find($Config)
    {
      if(Is_Array($Config))
        $Config=$this->Create_Object('/Builder/Config/Set', ['Config'=>$Config]);
      ForEach($this->List As $Item)
        if($Res=$Item->Find($Config))
          return $Res;
      $this->Log('Error', 'Compiler not found')->Debug([$Config]);
      return null;
    }
    
    Function GetCompiler($Name, Array $Args=[])
    {
      return $this->List[$Name] ??= $this->_CreateCompiler($Name, $Args);
    }

    Private Function _CreateCompiler($Name, Array $Args=[])
    {
      $Args['Manager']=$this->Manager;
      $Res=$this->Create_Object('/Builder/Compiler/CPP/'.$Name.'/Manager', $Args);
    //$Res->Load();
      return $Res;
    }

    Protected Function _Debug_Info(Array &$Res)
    {
      Parent::_Debug_Info($Res);
      UnSet($Res['Manager']);
    }
  }
?>