<?
//$Loader->Load_Class("System/Env");
 
  $Loader->Parent_Class('/Object');
  
  class C_Builder_Compiler_CPP_VC_Detect extends C_Object
  {
    Var $List=[
      ['VC\bin\vcvars32.bat'                                ,'x86'   ,'x86'   ,],
    //['VC\bin\vcvarsphoneall.bat'                          ,'?'     ,'?'     ,],
    //['VC\bin\vcvarsphonex86.bat'                          ,'?'     ,'?'     ,],
      ['VC\bin\amd64\vcvars64.bat'                          ,'amd64' ,'amd64' ,],
      ['VC\bin\amd64_arm\vcvarsamd64_arm.bat'               ,'amd64' ,'arm'   ,],
      ['VC\bin\amd64_x86\vcvarsamd64_x86.bat'               ,'amd64' ,'x86'   ,],
      ['VC\bin\x86_amd64\vcvarsx86_amd64.bat'               ,'x86'   ,'amd64' ,],
    //['VC\bin\x86_arm\vcvarsphonex86_arm.bat'              ,'x86'   ,'arm'   ,],
      ['VC\bin\x86_arm\vcvarsx86_arm.bat'                   ,'x86'   ,'arm'   ,],
    //['VC\ClangC2\bin\amd64\clang.exe'                     ,'amd64' ,'?'     ,],
    //['VC\ClangC2\bin\x86\clang.exe'                       ,'x86'   ,'?'     ,],
      ['VC\Auxiliary\Build\vcvars32.bat'                    ,'x86'   ,'x86'   ,],
      ['VC\Auxiliary\Build\vcvars64.bat'                    ,'amd64' ,'amd64' ,],
    //['VC\Auxiliary\Build\vcvarsall.bat'                   ,''      ,'?'     ,],
      ['VC\Auxiliary\Build\vcvarsamd64_arm.bat'             ,'amd64' ,'arm'   ,],
      ['VC\Auxiliary\Build\vcvarsamd64_x86.bat'             ,'amd64' ,'x86'   ,],
      ['VC\Auxiliary\Build\vcvarsx86_amd64.bat'             ,'x86'   ,'amd64' ,],
      ['VC\Auxiliary\Build\vcvarsx86_arm.bat'               ,'x86'   ,'arm'   ,],
    //['VC\Tools\ClangC2\14.10.25903\bin\HostX64\clang.exe' ,'amd64' ,'*'     ,],
    //['VC\Tools\ClangC2\14.10.25903\bin\HostX86\clang.exe' ,'x86'   ,'*'     ,],
    //['VC\Tools\MSVC\14.12.25827\bin\Hostx64\arm\cl.exe'   ,'amd64' ,'arm'   ,],
    //['VC\Tools\MSVC\14.12.25827\bin\Hostx64\x64\cl.exe'   ,'amd64' ,'amd64' ,],
    //['VC\Tools\MSVC\14.12.25827\bin\Hostx64\x86\cl.exe'   ,'amd64' ,'x86'   ,],
    //['VC\Tools\MSVC\14.12.25827\bin\Hostx86\arm\cl.exe'   ,'x86'   ,'arm'   ,],
    //['VC\Tools\MSVC\14.12.25827\bin\Hostx86\x64\cl.exe'   ,'x86'   ,'amd64' ,],
    //['VC\Tools\MSVC\14.12.25827\bin\Hostx86\x86\cl.exe'   ,'x86'   ,'x86'   ,],
    //['Common7/Tools/vsdevcmd/ext/vcvars.bat'              ,'?'     ,'?'     ,],
    //['Common7/Tools/vsdevcmd/ext/vcvars/vcvars140.bat'    ,'?'     ,'?'     ,],
    ];
    
    Function GetVersion() { return 6; }
  
    function Detect($Vars)
    {
      $VcPath  =$Vars['Info']['Path'];
    //$Cache   =$Vars['Cache']->GetEnumDir('');
      $Check   =$Vars['Check'];
    //$MapInfo =$Vars['MapInfo'];
      $Path=$Check->FullPath.'/Check/';
      
      $PathBat  =$Path.''        ;
      $PathObj  =$Path.'obj/'    ;
      $PathExe  =$Path.'bin/'    ;
      $PathTmp  =$Path.'tmp/'    ;
      $PathInfo =$Path.'Info/'   ;
      $PathVc   =$Check->FullPath.'/VcVars/' ;
      
      CreatePath($PathBat  );
      CreatePath($PathObj  );
      CreatePath($PathExe  );
      CreatePath($PathTmp  );
      CreatePath($PathInfo );
      CreatePath($PathVc   );
      
    //$FileSrc='../test.c';
      $FileSrc=$this->Loader->_Find_Lib('/Builder/Compiler/CPP/VC/Test.c');
      
      $CurrEnv=$this->Create_Object('/System/Env');
      $CurrEnv->LoadCurrent();

      static $Removes_VcVars=[
      //'CommandPromptType'  ,
        'DevEnvDir'          ,
        'ExtensionSdkDir'    ,'Framework40Version' ,'FrameworkDir'       ,'FrameworkDIR32'     ,
        'FrameworkDIR64'     ,'FrameworkVersion'   ,'FrameworkVersion32' ,'FrameworkVersion64' ,
        'IFCPATH'            ,'INCLUDE'            ,'LIB'                ,'LIBPATH'            ,
        'NETFXSDKDir'        ,'Platform'           ,'UCRTVersion'        ,'UniversalCRTSdkDir' ,
        'VCIDEInstallDir'    ,'VCINSTALLDIR'       ,'VCToolsInstallDir'  ,'VCToolsRedistDir'   ,
        'VCToolsVersion'     ,
        'VisualStudioVersion'  ,'VS150COMNTOOLS'       ,'VSCMD_ARG_app_plat'   ,
        'VSCMD_ARG_HOST_ARCH'  ,'VSCMD_ARG_TGT_ARCH'   ,'VSCMD_VER'            ,
        'VSINSTALLDIR'         ,'VSSDK150INSTALL'      ,
        'WindowsLibPath'       ,'WindowsSdkBinPath'    ,'WindowsSdkDir'        ,
        'WindowsSDKLibVersion' ,'WindowsSdkVerBinPath' ,'WindowsSDKVersion'    ,
        'WindowsSDK_ExecutablePath_x64'    ,'WindowsSDK_ExecutablePath_x86'    ,
      ];
      ForEach($Removes_VcVars As $Remove)
        $CurrEnv->Remove($Remove);

      $ItemEnv=$this->Create_Object('/System/Env');
      File_Put_Contents($PathVc.'BaseEnv.bat', $CurrEnv->ToCmd());
      
      $Res=[];
      foreach($this->List as $k=>$Item)
      {
        $VcFile=$VcPath.'/'.$Item[0];
      //$k=str_pad($k, 3, '0', STR_PAD_LEFT);
        if(File_Exists($VcFile))
        {
          $this->Log('Log', 'Load ', $VcFile);
          $k=$Check->AllocNum($VcFile, '', ['Pad'=>2]);
          
          $FileBat  =$PathBat .$k.'.bat' ;
          $FileObj  =$PathObj .$k.'.o'   ;
          $FileExe  =$PathExe .$k.'.exe' ;
          $FileEnv  =$PathTmp .$k.'.env' ;
          $FileVc   =$PathVc  .$k.'.VcVars.bat' ;
          
        //$this->Log('Log', '>',$File);
          $Cmd=[
            "@echo off\r\n",
          //'SET >',$k,'.txt2',"\r\n",
            'call "',$VcFile,'"',"\r\n",
          //'MkDir ',$PathObj,"\r\n",
            'SET >',$FileEnv,"\r\n",
          //'cl 2>info\\',$k,'.info',"\r\n",
          //'cl /nologo -c ',$FileSrc,' /Fo: ',$FileObj,"\r\n",
            'cl /nologo -c ',$FileSrc,' /Fo',$FileObj,"\r\n",
            'link /nologo ',$FileObj,' /OUT:',$FileExe,"\r\n",
          ];
          $ToolsList=['cl', 'link', 'lib', 'mt', 'rc', 'ResGen'];
          $Tools=[];
          ForEach($ToolsList As $ToolItem)
          {
            $FileInfo=$PathInfo.$k.'.'.$ToolItem.'.Info.txt' ;
            $FileHelp=$PathInfo.$k.'.'.$ToolItem.'.Help.txt' ;
          
            $Cmd[]=$ToolItem.' /? >'.$FileHelp.' 2>'.$FileInfo."\r\n";
            
            $Tool=[
              'Cmd'  =>$ToolItem,
              'Info' =>$FileInfo,
              'Help' =>$FileHelp,
            ];
            $Tools[$ToolItem]=$Tool;
          }
          FS_File_Put_Contents($FileBat, implode($Cmd));
          exec($FileBat);
          
          // Begin Env
          $ItemEnv->Clear();
          $ItemEnv->LoadFile($FileEnv);
        //unlink($FileEnv);
          $CurrEnv->LoadCurrent();
          $ItemEnv->Minus($CurrEnv);
          // TODO:
          static $Removes_PreInit=[
            '__VSCMD_PREINIT_PATH'    ,
            '__VSCMD_PREINIT_INCLUDE' ,
            '__VSCMD_PREINIT_LIB'     ,
            '__VSCMD_PREINIT_LIBPATH' ,
            '__VSCMD_PREINIT_VS150COMNTOOLS' ,
            '__VSCMD_PREINIT_VCToolsVersion' ,
          ];
          ForEach($Removes_PreInit As $Remove)
            $ItemEnv->Remove($Remove);
          File_Put_Contents($FileVc, $ItemEnv->ToCmd());
          // End Env
          
          if(!File_Exists($FileObj))
            continue;
   
          $Obj_Bin=FS_File_Get_Contents($FileObj);
          $PreDef=[];
          preg_match_all('/>>>(.+):(.+);<<</', $Obj_Bin, $Matches, PREG_SET_ORDER);
          foreach($Matches as $Match)
            if($Match[1]!==$Match[2])
              $PreDef[$Match[1]]=$Match[2];
          
          $Info=[
            'From'   =>$Vars['Info'],
            'PreDef' =>$PreDef,
            'Env'    =>$ItemEnv->GetMap(),
          ];
          
        //$MapInfo->Set($VcFile, '', $Info);
          $ST=$Check->GetStorage($k)->SetVars($Info);
        //$this->Log('Log', 'SaveInfo ',$ST->FullPath);
          $Res[$VcFile]=[
            'VcVarsOrig'  =>$VcFile,
            'VcVars'      =>$FileVc,
            'CompilerCPU' =>$Item[1],
            'CPU'         =>$Item[2],
            'VcVer'       =>(Int)$PreDef['_MSC_VER'],
            'VcFullVer'   =>(Int)$PreDef['_MSC_FULL_VER'],
            'Win'         =>($PreDef['_WIN32']??0)==='1',
            'Includes'    =>$ItemEnv->INCLUDE ->ToArray(),
            'Lib'         =>$ItemEnv->LIB     ->ToArray(),
            'LibPath'     =>$ItemEnv->LIBPATH ->ToArray(),
            'Tools'       =>$Tools,
          ];
        //break; // TODO: Remove
        }
      }
      return $Res;
    }
  };

?>