<?
  $Loader->Parent_Class('/Object');
  $Loader->Using_Class('/Builder/CppConfig');
//$Loader->Load_Class('/Builder/CppConfig');
  $Loader->Load_Type('/Builder/Asset/Info');

  class C_Builder_Module extends C_Object
  {
    Var $CacheDir ;
    Var $Modules  ;
    Var $Parent   ='';
    Var $Name     ='';
    Var $FullName ='';
    Var $Path     ='';
    Var $MD5_Storage ;
    Var $EnumCache   ;
    Var $Prefixes =[];
    
    Var $Assets_Init =[];
    Var $Assets_Php  =[];
    
    Var $Builds=[];
  
    Protected Function _Init(Array $Args)
    {
      parent::_Init($Args);
      
      $this->CacheDir =$Args['CacheDir' ];
      $this->Modules  =$Args['Modules'  ];
    //$this->MD5_Storage=$this->Modules->Manager->Cache->GetMD5Enum($this->CacheDir.'/MD5_EnumDir');
    //$this->Log('Debug', 'Modules ', $this->CacheDir);
      $this->MD5_Storage =$this->Modules->Manager->Cache->GetMD5Storage($this->CacheDir.'/');
      $this->EnumCache   =$this->Modules->Manager->Cache->GetEnumDir($this->CacheDir.'/');
    //$this->Log('Debug', 'MD5_Storage ', $this->MD5_Storage ->FullPath);
    //$this->Log('Debug', 'EnumCache   ', $this->EnumCache   ->FullPath);
      if(IsSet($Args['Parent'   ])) $this->Parent   =$Args['Parent'   ];
      if(IsSet($Args['Name'     ])) $this->Name     =$Args['Name'     ];
      if(IsSet($Args['FullName' ])) $this->FullName =$Args['FullName' ];
      if(IsSet($Args['Path'     ])) $this->Path     =$Args['Path'     ];
      if(IsSet($Args['Assets'   ])) $this->Assets   =$Args['Assets'   ];
      if(IsSet($Args['PhpFile'  ])) $this->PhpFile  =$Args['PhpFile'  ];
      
      
      $Prefixes=[];
      $FullNameL=Explode('/', $this->FullName);
      while(count($FullNameL))
      {
        Array_Pop($FullNameL);
        $Prefixes[]=Implode('/', $FullNameL).($FullNameL? '/':'');
      }
      $this->Prefixes=$Prefixes;
      
      $this->LoadPhp();
      
      $this->Assets_Init[]=['Asset/Path'  ,RealPath($this->Path)];
      $this->Assets_Init[]=['Module/Path' ,RealPath($this->Path)]; // TODO: Remove
    //var_export($Config);
    }

    Private Function LoadPhp()
    {
      If(!$this->PhpFile)
        return false;
      $Cfg=Include $this->PhpFile;
      
      if($this->FullName ==='' && IsSet($Cfg['FullName' ])) $this->FullName =$Cfg['FullName' ];
      if($this->Name     ==='' && IsSet($Cfg['Name'     ])) $this->Name     =$Cfg['Name'     ];
      if(IsSet($Cfg['Assets'])) $this->Assets_Php=$Cfg['Assets'];
    }
    
    Protected $Instances=[];
    
    Function CreateInstance($Context)
    {
      $Key=Serialize($Context->GetContextId());
      if(IsSet($this->Instances[$Key]))
        return $this->Instances[$Key];
      $Assets=Array_Merge(
        $Context->Assets  ,
        $this->Assets_Init 
      );
      $Assets=Array_Merge(
        $Assets,
        $this->Assets_Php  
      );
      $Info=T_Builder_Asset_Info::Get('Module/Instance');
      $Args=[
        'Info'    =>$Info    ,
        'Param'   =>$Assets  ,
        'Context' =>$Context ,
        'Module'  =>$this    ,
        'Modules' =>$this->Modules,
        'Key'     =>$Key,
      ];
      $Res=$this->Create_Object($Info->Class, $Args);
      $this->Instances[$Key]=$Res;
      return $Res;
    }
  /*
    Function Prepare($Context)
    {
      $Res=[];
      ForEach($Assets->Public As $List)
        ForEach($List As $Item)
          $Item->GetPrepareTasks($Res);
    }
 
    Function Make($Context)
    {
      $Res=[];
      ForEach($Assets->Public As $List)
        ForEach($List As $Item)
          $Item->GetMakeTasks($Res);
    }
  */
 
    Protected Function _Done()
    {
      $this->Modules=null;
    //$this->Config->Done();
      parent::_Done();
    }

    Function GetMD5Cache($FullPath)
    {
      return $this->MD5_Storage;
    //return $this->MD5_Storage->Get($FullPath);
    }

    Protected Function _Debug_Info(Array &$Res)
    {
      Parent::_Debug_Info($Res);
      UnSet($Res['Modules']);
    }
    
    Function GetName() { return $this->FullName; }
  };
?>
