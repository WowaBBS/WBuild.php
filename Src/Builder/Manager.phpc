<?  $Loader->Parent_Class('/Object');//$Loader->Load_Class('/Builder/Module');  $Loader->Load_Lib('/FS/Utils'); class C_Builder_Manager extends C_Object {   Var $CacheDir='.Build';   Var $Cache;    Var $Modules;      Function _Init(Array $Args)   {     parent::_Init($Args);     $this->CacheDir=FileName_Normalize(RealPath('./').'/'.($Args['CacheDir']??$this->CacheDir)).'/';     $this->Cache=$this->Create_Object('/Cache/Manager', [$this->CacheDir]);     $ModulesArgs= $Args['Modules']??[''];     $ModulesArgs['CacheDir']='Modules';     $ModulesArgs['Manager']=$this;     $this->Modules=$this->Create_Object('/Builder/Modules', $ModulesArgs);   }   Function GetModule($Name)   {     return $this->Modules->Get($Name);   }      Protected Function _Done()   {     $this->Modules->Done();     $this->Modules=null;     parent::_Done();   }      Function Create_Context($Args)   {     $Args['Manager']=$this;     return $this->Create_Object('/Builder/Context', $Args);   }      //****************************************************************   // Compilers      Var $Compilers=[];      Function GetCompiler($Name, Array $Args=[])   {     if(IsSet($this->Compilers[$Name]))       return $this->Compilers[$Name];     $Args['Manager']=$this;     $Res=$this->Create_Object('/Builder/Compiler/'.$Name.'/Manager', $Args);     $this->Compilers[$Name]=$Res;     return $Res;   }   //****************************************************************   // Programs   Var $Programs=[];      Function GetProgram($Name, Array $Args=[])   {     if(IsSet($this->Programs[$Name]))       return $this->Programs[$Name];     $Args['Manager']=$this;     $Res=$this->Create_Object('/Builder/Program/'.$Name.'/Manager', $Args);     $this->Programs[$Name]=$Res;     return $Res;   }   //**************************************************************** };?>