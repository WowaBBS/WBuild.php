<?
  $Loader->Parent_Class('/Builder/Asset/Base');

  class C_Builder_Asset_Module_Depends extends C_Builder_Asset_Base
  {
    Var $Name       = ''    ;
    Var $Instance   = null  ;
    Var $IsExternal = null  ;

    Function GetKey() { return $this->Name; }
  
    Protected Function _Init(Array $Args)
    {
      Parent::_Init($Args);
      $this->Name =$Args['Name'      ];
      $Context    =$Args['Context'   ]?? [];
      $IsExternal =$Args['>External' ]?? null;
      $this->IsExternal=$IsExternal;
      $I=$this->GetModuleInstance();
      $Context=$I->Context->Get_Context($Context);
    //$Context=$Context? $this->GetManager()->Create_Context($Context):$I->Context;
      
      if($Module=$I->GetModule()->GetSubModule($this->Name))
        $this->Instance=$Module->CreateInstance($Context, $IsExternal, $this);
        
      if($this->Instance)
      {
      //DoEvent
        if(!$I->IsExternalModule)
          asdf();
        $this->Instance->SetExternalModule($IsExternal, $this);
        // TODO: Check Debug Developing
        $this->Outer->AddFrom($this->Instance, null, IsSet($Args['Debug']['AddFrom']));
      }
    }
    
    Static Function _ParseParams($Args)
    {
      $IsExternal=null;
      $Outer=$Args['Outer'];
      $Param=$Args['Param'];
      UnSet($Args['Param']);
      $Res=[];
      ForEach($Param As $k=>$v)
      {
        if($k==='>External')
        {
          $IsExternal=$v;
          continue;
        }
        if($v==='>External')
        {
          $IsExternal=true;
          continue;
        }
        $_Args=$Args;
        If(!Is_String($k))
        {
          $k=$v;
          $v=!$IsExternal;
        }
        $_Args['Name'      ]=$k;
        $_Args['>External' ]=$IsExternal;
        $_Args['Context' ]=$v;
        $Res[]=$_Args;
      }
      
      return $Res;
    }
  //****************************************************************
  // Debug
    
    Protected Function _Debug_Info(Array &$Res)
    {
      Parent::_Debug_Info($Res);
      if($this->Instance)
        $Res['Instance']=$this->Instance->ToDebugInfo();
    }
    
  //****************************************************************
  };
?>