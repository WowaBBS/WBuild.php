<?  $Loader->Parent_Class('/Builder/Asset/Base');  class C_Builder_Asset_Module_Depends extends C_Builder_Asset_Base  {    Var $Name     ='';    Var $Instance =null;    Function GetKey() { return $this->Name; }      Protected Function _Init(Array $Args)    {      Parent::_Init($Args);      $this->Name =$Args['Name'    ];      $Context    =$Args['Context' ]??[];      $I=$this->GetModuleInstance();      $Context=$Context? $this->GetManager()->Create_Context($Context):$I->Context;            $Modules=$I->GetModules();      if($Module=$Modules->Get($this->Name))        $this->Instance=$Module->CreateInstance($Context);      else        echo '[Error] Module ',$this->Name," not found\n";            $this->Outer->AddFrom($this->Instance, null, IsSet($Args['Debug']['AddFrom']));    }        Static Function _ParseParams($Args)    {      $Outer=$Args['Outer'];      $Param=$Args['Param'];      UnSet($Args['Param']);      $Res=[];      ForEach($Param As $k=>$v)      {        $_Args=$Args;        $HasContext=Is_Array($v);        $_Args['Name'    ]=$HasContext? $k:$v;        if($HasContext)          $_Args['Context' ]=$v;        $Res[]=$_Args;      }            return $Res;    }  };?>