<?
  $Loader->Parent_Class('/Builder/Asset/List');

  class C_Builder_Asset_Module_Instance extends C_Builder_Asset_List
  {
    Var $Context   ;
    Var $Module    ;
    Var $Modules   ;
    Var $Manager   ;
    Var $EnumCache ;
    
    Protected Function _Init(Array $Args)
    {
      $this->Context =$Args['Context' ];
      $this->Module  =$Args['Module'  ];
      $this->Modules =$Args['Modules' ];
      $Key           =$Args['Key'     ];
      $this->Manager =$this->Modules->Manager;
      $Args['Outer']=false;
    //$Key=Serialize($this->Context->GetContextId());
    //$this->Log('Debug', 'MD5_Storage ', $this->Module->MD5_Storage ->FullPath);
    //$this->Log('Debug', 'EnumCache   ', $this->Module->EnumCache   ->FullPath);
      $this->EnumCache = $this->Module->EnumCache->AllocEnumDir($Key, 'I', ['NoZero'=>true, 'Pad'=>1]); //'Instance', ['NoZero'=>true,  'Pad'=>1, 'Split'=>'_'] , ['Pad'=>1, 'NoZero'=>true]
    //$this->Log('Debug', 'EnumCacheI  ', $this->EnumCache   ->FullPath);
      parent::_Init($Args);
    }
    
    Function IsInstance() { return true; }
    
    Function Make()
    {
      $Res=[];
      $Depends=[];
      ForEach($this->Public As $List)
        ForEach($List As $Item)
          $Item->GetMakeTasks($Res, $Depends);
      return $Res;
    }

    Function GetModuleInstance()
    {
      return $this;
    }
    
    Function GetModules () { return $this->Modules ; }
    Function GetModule  () { return $this->Module  ; }
    
    Function GetMD5Cache($FullPath)
    {
      return $this->Module->GetMD5Cache($FullPath);
    }

  //****************************************************************
  // Events
  
    Protected Function _DoEvent($Asset, $Type, ...$Args)
    {
      return $this->Module->_DoAssetEvent($Asset, $Type, ...$Args);
    }
    
  //****************************************************************
  };
?>