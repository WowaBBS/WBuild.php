<?  $Loader->Parent_Class('/Builder/Asset/Base');//$Loader->Parent_Class('/Builder/Asset/Inline');  class C_Builder_Asset_Target_Copy extends C_Builder_Asset_Base//extends C_Builder_Asset_Inline  {  //Static Function _ParseParams($Args)  //  $Outer=$Args['Outer'];  //  $Param=$Args['Param'];    Function _InitParam(Array &$Param)    {      parent::_InitParam($Param);      $From =$Param[0]??$Param['From' ]    ; UnSet($Param[0]); UnSet($Param['From' ]);      $To   =$Param[1]??$Param['To'   ]??''; UnSet($Param[1]); UnSet($Param['To'   ]);                if($To)        $TargetDir=$this->CreateAsset('Target/Dir', $To);              $From =$this->GetAssets($From);           #ForEach($From As $FromItem)     #  if(IsSet($FromItem->FileDepends))     #    ForEach($FromItem->FileDepends As $Item)     #      $From[$Item->Object_Id]=$Item;      $Added=[];      $ToAdd=$From;      While(Count($ToAdd))      {        $Adding=$ToAdd;        $ToAdd=[];        ForEach($Adding As $AddingItem)          $Added[$AddingItem->Object_Id]=$AddingItem;                ForEach($Adding As $AddingItem)        {          if(IsSet($AddingItem->FileDepends))            ForEach($AddingItem->FileDepends As $Item)              if(!IsSet($Added[$Item->Object_Id]))                $ToAdd[$Item->Object_Id]=$Item;        }      }      $From=$Added;            ForEach($From As $i)      {        $Exec=$this->CreateExec();        $Dest=$this->CreateAsset('Target/File', [$i->GetLocalPath(), '>Create'=>1]);                $Exec->CheckObject($i);        $Exec->MkDir($Dest);        $Exec->Copy($i, $Dest);        $Exec->Finish();        $Dest->AddTask($Exec);      }            if($TargetDir)        $TargetDir->Remove();            //return [];    }  };?>