<?
  $Loader->Parent_Class('/Builder/Asset/FS/Path');

  class C_Builder_Asset_Net_UsingPath extends C_Builder_Asset_FS_Path
  {
    Var $IsSystem=False;
  
    Protected Function _Init(Array $Args)
    {
      $Path=$Args['Path'];
      if($Path!=='' && $Path[0]==='>')
      {
        $Compiler=$Args['Outer']->RequireAsset('Cpp/Compiler')->Instance;
        $Args['Path']=$Compiler->DetectUsingPath($Path);
        $this->IsSystem=true;
      }
     #if($Def=$Args['>Detect']??false)
     #  $Args['Path']=$Compiler->GetDefaultUsingPath($Def);
     #$this->Log('Debug', 'Path: ',$Args['Path']);
      Parent::_Init($Args);
    }
    
    Static Function GetDefMask() { return '*.dll'; }
    
    Function IsSystem() { return $this->IsSystem; }
    
   #Static Function _CustomParams()
   #{
   #  $Res=Parent::_CustomParams();
   #  $Res[]='>Detect';
   #  return $Res;
   #}
    
    Static Protected Function _GetSearchPathClass() { return []; }
  };
?>