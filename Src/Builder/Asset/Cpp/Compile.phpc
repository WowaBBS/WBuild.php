<?
  $Loader->Parent_Class('/Builder/Asset/Cpp/MakeBase');

  class C_Builder_Asset_Cpp_Compile extends C_Builder_Asset_Cpp_MakeBase
  {
    Static Function Make($Outer, $Compiler, $Param)
    {
      Parent::Make($Outer, $Compiler, $Param);
      
      Static::Compile($Outer, $Compiler, $Param);
    }

    Static Function Compile($Outer, $Compiler, $Param)
    {
      $OutPath=$Param['OutPath'];
     #$Outer->Log('Debug', 'OutPath: ',$OutPath);
    
      $PathObjAsset=$Outer->CreateAsset('Cpp/ObjPath', $OutPath.'Obj');

      $ITypeCppObj       = 'Cpp/Obj'       ;
      $ITypeCppLib       = 'Cpp/Lib'       ;
      
      $DepUsing=$Param['DepUsing']??false;
      if(!$DepUsing)
      {
        $ITypeCppObj='';
        $ITypeCppLib='';
      }
      
      $Sources=$Outer->ExtractAssets('Cpp/Src');

      $EnumCache=$Outer->GetModuleInstance()->EnumCache;

      $Items=[];
      ForEach($Sources As $SrcAsset)
      {
        [$Dir, $Name]=$SrcAsset->GetDirAndNick();
        $Num=$EnumCache->AllocNum($Dir, 'Obj', ['Pad'=>1]);
        $ObjNick=$Num.'/'.$Name;
        $ObjAsset=$Outer->CreateAsset('Cpp/Obj', ['Path'=>$Compiler->GetObjFile($ObjNick), '>Create'=>1]);
       #$Outer->Log('Debug', '  ObjNick: ',$ObjNick);
       #$Outer->Log('Debug', '  ObjAsset: ',$ObjAsset->GetFullPath());
        
        $Items[]=[
          'TaskPath'  =>$OutPath.'Task/Obj/'.$ObjNick,
          'SrcAsset' =>$SrcAsset,
          'ObjAsset' =>$ObjAsset,
        ];
      }

      $Compiler->Compile([
        'Objects'      =>$Outer->GetAssets  ($ITypeCppObj    ),
        'Libs'         =>[], //$Outer->GetAssets  ($ITypeCppLib    ),
        'Defines'      =>$Outer->GetAssets  ('Cpp/Define'       ),
        'ForceInclude' =>$Outer->GetAssets  ('Cpp/ForceInclude' ),
        'Includes'     =>$Outer->GetAssetsR ('Cpp/Include'      ),
        'Using'        =>$Outer->GetAssets  ('Cpp/Using'        ),
        'UsingPath'    =>$Outer->GetAssets  ('Cpp/UsingPath'    ),
        'DepUsing'     =>$DepUsing  ,
        'Items'        =>$Items     ,
        'Outer'        =>$Outer     ,
        'Compiler'     =>$Compiler  ,
        'EnumCache'    =>$EnumCache ,
        'OutPath'      =>$OutPath   ,
        'LazyDepsId'   =>$PathObjAsset->Object_Id,
      ]);

      $PathObjAsset->RemoveFromOuter();
    }
  };
?>