<?  $Loader->Parent_Class('/Builder/Asset/Cpp/MakeBase');  class C_Builder_Asset_Cpp_Compile extends C_Builder_Asset_Cpp_MakeBase  {    Function Make($Outer, $Compiler, $Param)    {      $OutPath=$Param['OutPath'];          $PathObj=$OutPath.'Obj';            $PathObjType='Cpp/ObjPath' ;      $PathObjAsset=$Outer->CreateAsset($PathObjType, $PathObj);            Parent::Make($Outer, $Compiler, $Param);      $this->Compile($Outer, $Compiler, $Param);            $PathObjAsset->Remove();    }    Function Compile($Outer, $Compiler, $Param)    {      $TypeCppSrc     = 'Cpp/Src'     ; //$Outer->MakeNS_ByParam('Cpp/Src'     ,$Param, 'NS_Src'     );      $TypeCppDefine  = 'Cpp/Define'  ; //$Outer->MakeNS_ByParam('Cpp/Define'  ,$Param, 'NS_Define'  );      $TypeCppInclude = 'Cpp/Include' ; //$Outer->MakeNS_ByParam('Cpp/Include' ,$Param, 'NS_Include' );      $TypeCppObj     = 'Cpp/Obj'     ; //$Outer->MakeNS_ByParam('Cpp/Obj'     ,$Param, 'NS_Obj'     );            $Sources=$Outer->RemoveAssets($TypeCppSrc);      $Items=[];      ForEach($Sources As $SrcAsset)      {        $ObjFile=$Compiler->GetObjFile($SrcAsset);        $ObjAsset=$Outer->CreateAsset($TypeCppObj, $ObjFile);        $Exec=$ObjAsset->CreateExec();        $ObjAsset->AddTask($Exec);                $Items[]=[          'SrcAsset' =>$SrcAsset ,          'ObjAsset' =>$ObjAsset ,          'Exec'     =>$Exec     ,        ];      }      $Compiler->Compile([        'Defines'  =>$Outer->GetAssets($TypeCppDefine  ),        'Includes' =>$Outer->GetAssets($TypeCppInclude ),        'Items'    =>$Items,      ]);    }  };?>