<?  $Loader->Parent_Class('/Builder/Asset/Cpp/MakeBase');  class C_Builder_Asset_Cpp_Compile extends C_Builder_Asset_Cpp_MakeBase  {    Static Function Make($Outer, $Compiler, $Param)    {      Parent::Make($Outer, $Compiler, $Param);            Static::Compile($Outer, $Compiler, $Param);    }    Static Function Compile($Outer, $Compiler, $Param)    {      $OutPath=$Param['OutPath'];     #echo 'OutPath: ',$OutPath ,"\n";          $PathObj=$OutPath.'Obj';      $PathObjType='Cpp/ObjPath' ;      $PathObjAsset=$Outer->CreateAsset($PathObjType, $PathObj);      $ITypeCppSrc       = 'Cpp/Src'       ; //$Outer->MakeNS_ByParam('Cpp/Src'       ,$Param, 'NS_Src'       );      $ITypeCppDefine    = 'Cpp/Define'    ; //$Outer->MakeNS_ByParam('Cpp/Define'    ,$Param, 'NS_Define'    );      $ITypeCppInclude   = 'Cpp/Include'   ; //$Outer->MakeNS_ByParam('Cpp/Include'   ,$Param, 'NS_Include'   );      $OTypeCppObj       = 'Cpp/Obj'       ; //$Outer->MakeNS_ByParam('Cpp/Obj'       ,$Param, 'NS_Obj'       );      $ITypeCppUsing     = 'Cpp/Using'     ; //$Outer->MakeNS_ByParam('Cpp/Using'     ,$Param, 'NS_Using'     );      $ITypeCppUsingPath = 'Cpp/UsingPath' ; //$Outer->MakeNS_ByParam('Cpp/UsingPath' ,$Param, 'NS_UsingPath' );      $ITypeCppObj       = 'Cpp/Obj'       ;      $ITypeCppLib       = 'Cpp/Lib'       ;            $_DS=$Param['_DS']??false;      if(!$_DS)      {        $ITypeCppObj='';        $ITypeCppLib='';      }            $Sources=$Outer->RemoveAssets($ITypeCppSrc);      $EnumCache=$Outer->GetModuleInstance()->EnumCache;      $Items=[];      ForEach($Sources As $SrcAsset)      {        [$Dir, $Name]=$SrcAsset->GetDirAndNick();        $Num=$EnumCache->AllocNum($Dir, 'Obj', ['Pad'=>1]);        $ObjNick=$Num.'/'.$Name;        $ObjFile=$Compiler->GetObjFile($ObjNick);        $ObjAsset=$Outer->CreateAsset($OTypeCppObj, ['Path'=>$ObjFile, '>Create'=>1]);       #echo '  ObjNick: ',$ObjNick,"\n";       #echo '  ObjFile: ',$ObjFile,"\n";       #echo '  ObjAsset: ',$ObjAsset->GetFullPath(),"\n";        $Exec=$ObjAsset->CreateExec();        $ObjAsset->AddTask($Exec);                $Items[]=[          'SrcAsset' =>$SrcAsset ,          'ObjAsset' =>$ObjAsset ,          'Exec'     =>$Exec     ,          'OutPath'  =>[$OutPath,$ObjNick],        ];      }      $Compiler->Compile([        'Objects'   =>$Outer->GetAssetsR ($ITypeCppObj       ),        'Libs'      =>$Outer->GetAssetsR ($ITypeCppLib       ),        'Defines'   =>$Outer->GetAssets  ($ITypeCppDefine    ),        'Includes'  =>$Outer->GetAssetsR ($ITypeCppInclude   ),        'Using'     =>$Outer->GetAssets  ($ITypeCppUsing     ),        'UsingPath' =>$Outer->GetAssets  ($ITypeCppUsingPath ),        'DepUsing'  =>$_DS,        'Items'     =>$Items,        'Outer'     =>$Outer,        'Compiler'  =>$Compiler,        'EnumCache' =>$EnumCache,        'OutPath'   =>$OutPath,      ]);      $PathObjAsset->Remove();    }  };?>