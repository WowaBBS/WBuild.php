<?
  $Loader->Parent_Class('/Builder/Asset/FS/File');

  class C_Builder_Asset_Cpp_Lib extends C_Builder_Asset_FS_File
  {
  //Var $Name=''; // TODO:
    Static Protected Function _GetSearchPathClass() { return ['Cpp/LibPath']; }

    Protected Function _Init(Array $Args)
    {
      Parent::_Init($Args);
      if($Dlls=$Args['Dlls']??[])
      {
        $Dlls=$this->CreateAssets('Bin/Dll', $Dlls);
        $this->AddFileDepends($Dlls);
        ForEach($Dlls As $Dll)
          $Dll->RemoveFromOuter();
      }
    }

    Static Function _AddItem(Array &$Res, Array $Args, $Path)
    {
      if(Is_String($Path) && Preg_Match('/^(\w[\w\d]*)\\.lib$/Ssi', $Path, $M))
        $Path=[$Path, 'lib'.StrToLower($M[1]).'.a'];
      # $Args['Outer']->Log('Debug', '!!!!')->Debug('lib'.$M[1].'.a');
      Parent::_AddItem($Res, $Args, $Path);
    }
    
    Static Function _AddItems(Array &$Res, Array $Args, Array $Paths)
    {
      $Libs=[];
      $Dlls=[];
      static $CheckDll=[
        '>dll'=>1,
      ];
    
      $zDll=false;
      ForEach($Paths As $Path)
        if(IsSet($CheckDll[$Path]))
          $zDll=true;
        elseif($zDll)
        {
          $Dlls[]=$Path;
          $zDll=false;
        }
        else
        {
          $Args['Dlls']=$Dlls;
          Static::_AddItem($Res, $Args, $Path);
        }
    }
  };
?>