<?  $Loader->Parent_Class('/Builder/Asset/Base');  class C_Builder_Asset_Cpp_Pch extends C_Builder_Asset_Base  {    Var $bInited  = false;    Var $Force    = false;    Var $Name     = false;        Var $DataFile = false; //'Debug\Project.pch' ;    Var $Header   = false; //'StdAfx.h'   ;    Var $Cpp      = false; //'StdAfx.cpp' ;    //Function GetKey() { return $this->Key; }        Protected Function _Init(Array $Args)    {      Parent::_Init($Args);    }        Function _InitParam(Array &$Param)    {      parent::_InitParam($Param);            $this->Force    =$Param['Force'  ]??false              ; UnSet($Param['Force'  ]);      $this->Name     =$Param['Name '  ]??'StdAfx'           ; UnSet($Param['Name'   ]);    //$this->DataFile =$Param['File '  ]??false              ; UnSet($Param['File'   ]);      $this->Header   =$Param['Header' ]??$this->Name.'.h'   ; UnSet($Param['Header' ]);      $this->Cpp      =$Param['Cpp'    ]??$this->Name.'.cpp' ; UnSet($Param['Cpp'    ]);    }    Function IsForce():bool    {      return $this->Force;    }        Function Prepare($Args)    {      $Outer     =$Args['Outer'     ];      $Compiler  =$Args['Compiler'  ];      $Includes  =$Args['Includes'  ]; // For search StdAfx.h      $EnumCache =$Args['EnumCache' ];      $OutPath   =$Args['OutPath'   ];            $Header=$this->Header;      ForEach(Array_Reverse($Includes) As $Include)        If($Res=$Include->Search($Header))        {          $this->Header=$Res;          $PchFile=$OutPath.'PCH/'.$Compiler->GetPchFile($EnumCache->AllocNum($Res, 'Pch', ['Pad'=>1]));          CreatePath(DirName($PchFile)); // TODO: Automatic using asset          $this->DataFile=$PchFile;          $this->bInited=true;          return true;        }      return false;    }        Function Extract(&$List, $Args)    {      if(!$this->bInited)        if(!$this->Prepare($Args))          return [];      // TODO: Init by $Args      $FileName=$this->Cpp;    //Echo 'Orig: ', $FileName, "\n";      $Res=[];      $Remove=[];      ForEach($List As $k=>$Item)      {        $SrcAsset=$Item['SrcAsset'];        $SrcName=$SrcAsset->GetFileName();       #Echo 'Src: ', $SrcName, "\n";        if(StrCaseCmp($SrcName, $FileName)==0)        {         #Echo 'Ok', "\n";          if($SrcName!==$FileName)            echo '[Error] Name ',$SrcName,' Is not same ',$FileName,"\n";        //UnSet($List[$k]);          $Remove[]=$k;          $Res[]=$Item;        }      }      ForEach($Remove As $k)        UnSet($List[$k]);           #ForEach($List As $k=>$Item)     #{     #  $SrcAsset=$Item['SrcAsset'];     #  $SrcName=$SrcAsset->GetFileName();     #  Echo 'Rest: ', $SrcName, "\n";     #}      switch(count($Res))      {      case 0; Echo '[Error] StdAfx isn`t exist',"\n"; break;      case 1; break; // Ok      default:        Echo '[Error] StdAfx files more then one:',"\n";         ForEach($Res As $Item)          Echo '  ',$Item['SrcAsset']->GetFullPath(),"\n";         while(count($Res)>1)          Array_Shift($Res);      }      return $Res;    }        Function GetHeaderName()    {      if(!$this->bInited)        UnSupported();      return BaseName($this->Header);    }        Function GetHeaderPath()    {      if(!$this->bInited)        UnSupported();      return $this->Header;    }        Function GetDataFile()    {      if(!$this->bInited)        UnSupported();      return $this->DataFile;    }      };  $DebM=$Loader->Get_Singleton('/Debug/Manager');  $DebM->AddInlineClass('C_Builder_Asset_Cpp_Pch');?>