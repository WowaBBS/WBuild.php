<?
  $Loader->Parent_Class('/Builder/Asset/Base');

  class C_Builder_Asset_Cpp_Pch extends C_Builder_Asset_Base
  {
    Var $bInited  = false;
    Var $Force    = false;
    Var $Name     = false;
    
    Var $DataFile = false; //'Debug\Project.pch' ;
    Var $Header   = false; //'StdAfx.h'   ;
    Var $Cpp      = false; //'StdAfx.cpp' ;
  
  //Function GetKey() { return $this->Key; }
    
    Protected Function _Init(Array $Args)
    {
      Parent::_Init($Args);
    }
    
    Function _InitParam(Array &$Param)
    {
      parent::_InitParam($Param);
      
      $this->Force    =$Param['Force'  ]??false              ; UnSet($Param['Force'  ]);
      $this->Name     =$Param['Name'   ]??'StdAfx'           ; UnSet($Param['Name'   ]);
    //$this->DataFile =$Param['File '  ]??false              ; UnSet($Param['File'   ]);
      $this->Header   =$Param['Header' ]??$this->Name.'.h'   ; UnSet($Param['Header' ]);
      $this->Cpp      =$Param['Cpp'    ]??$this->Name.'.cpp' ; UnSet($Param['Cpp'    ]);
    }

    Function IsForce():bool
    {
      return $this->Force;
    }
    
    Function Prepare($Args)
    {
      $Outer     =$Args['Outer'     ];
      $Compiler  =$Args['Compiler'  ];
      $Includes  =$Args['Includes'  ]; // For search StdAfx.h
      $EnumCache =$Args['EnumCache' ];
      $OutPath   =$Args['OutPath'   ];
      
      $Header=$this->Header;
      ForEach(Array_Reverse($Includes) As $Include)
        If($Res=$Include->Search($Header))
        {
          $this->Header=$Res;
          $PchFile=$OutPath.'PCH/'.$Compiler->GetPchFile($EnumCache->AllocNum($Res, 'Pch', ['Pad'=>1]));
          CreatePath(DirName($PchFile)); // TODO: Automatic using asset
          $this->DataFile=$PchFile;
          $this->bInited=true;
          return true;
        }
      return false;
    }
    
    Function Extract(&$List, $Args)
    {
      if(!$this->bInited)
        if(!$this->Prepare($Args))
          return [];
      // TODO: Init by $Args
      $FileName=$this->Cpp;
    //$this->Log('Debug', 'Orig: ', $FileName);
      $Res=[];
      $Remove=[];
      ForEach($List As $k=>$Item)
      {
        $SrcAsset=$Item['SrcAsset'];
        $SrcName=$SrcAsset->GetFileName();
       #$this->Log('Debug', 'Src: ', $SrcName);
        if(StrCaseCmp($SrcName, $FileName)==0)
        {
         #$this->Log('Debug', 'Ok');
          if($SrcName!==$FileName)
            $this->Log('Error', 'Name ',$SrcName,' Is not same ',$FileName);
        //UnSet($List[$k]);
          $Remove[]=$k;
          $Res[]=$Item;
        }
      }
      ForEach($Remove As $k)
        UnSet($List[$k]);
      
     #ForEach($List As $k=>$Item)
     #{
     #  $SrcAsset=$Item['SrcAsset'];
     #  $SrcName=$SrcAsset->GetFileName();
     #  $this->Log('Debug', 'Rest: ', $SrcName);
     #}
      switch(count($Res))
      {
      case 0; $this->Log('Error', 'StdAfx isn`t exist'); break;
      case 1; break; // Ok
      default:
        $Log=$this->Log('Error', 'StdAfx files more then one:');
        ForEach($Res As $Item)
          $Log('  ',$Item['SrcAsset']->GetFullPath());
        $Log->Done();
        while(Count($Res)>1)
          Array_Shift($Res);
      }
      return $Res;
    }
    
    Function GetHeaderName()
    {
      if(!$this->bInited)
        $this->Log('Fatal', 'PCH Asset is not inited');
      return BaseName($this->Header);
    }
    
    Function GetHeaderPath()
    {
      if(!$this->bInited)
        $this->Log('Fatal', 'PCH Asset is not inited');
      return $this->Header;
    }
    
    Function GetDataFile()
    {
      if(!$this->bInited)
        $this->Log('Fatal', 'PCH Asset is not inited');
      return $this->DataFile;
    }    
  };

  $DebM=$Loader->Get_Singleton('/Debug/Manager');
  $DebM->AddInlineClass('C_Builder_Asset_Cpp_Pch');
?>