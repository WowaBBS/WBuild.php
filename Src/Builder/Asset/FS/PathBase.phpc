<?  $Loader->Parent_Class('/Builder/Asset/Base');  $Loader->Load_Lib('/FS/Utils');  class C_Builder_Asset_FS_PathBase extends C_Builder_Asset_Base  {    Var $Path='';    Var $FullPath='';        Function GetKey() { return $this->GetPath(); }        Protected Function _Init(Array $Args)    {      Parent::_Init($Args);      if(IsSet($Args['Path']))        $this->SetPath($Args['Path']);    }        Function _ParseParams($Args)    {      return Self::_ParseParamsArrayField($Args, 'Path');    }        Final Function SetPath($v)    {      $v=FileName_Normalize($v);      $this->Path=$v;      $sp=$this->_GetSearchPathClass();      $v=$this->GlobalSearch($v, $sp);      $this->FullPath=$v;    }        Protected Function _GetSearchPathClass()    {      return [];    }        Function GetPath()    {    //return $this->Path;      return $this->FullPath;    }        Protected Function _IsFile() { return false; }    Static Function IsAbsolute($Path)    {      return StrLen($Path)>1 &&(        SubStr($Path, 0, 1)=='/'  ||        SubStr($Path, 0, 1)=='\\' ||        SubStr($Path, 1, 1)==':'      );          }        Function GlobalSearch($Path, $Assets=[], $Cfg=['First'=>true, 'Base'=>true])    {      $bIsFile =$this->_IsFile();      $bFirst  =$Cfg['First'  ];      if($Cfg['Base'])        $Assets[]='Module/Path';          if(Self::IsAbsolute($Path))        return $Path;      $Searches=[];      ForEach($Assets As $AssetClass)      {        $List=$this->GetAssets($AssetClass);        $c=count($List);      //Echo 'Global Search ', $Path, ' in ',$AssetClass, ' (', $c,')', "\n";        if($c==0)          continue;        if($bFirst)        {          $Searches[]=$List[$c-1];          break;        }        $Searches=Array_Merge($Searches, Array_Reverse($List));      }      ForEach($Searches As $Asset)      {        $Res=$Asset->Search($Path, $bIsFile);        if($Res!=='')          return $Res;      }      ForEach($Searches As $Asset)        return $Asset->GetSubPath($Path);      // TODO: Error      return $Path;    }  };  $DebM=$Loader->Get_Singleton('/Debug/Manager');  $DebM->AddInlineClass('C_Builder_Asset_FS_PathBase');?>