<?
  for($F=__FILE__; $F;) if(@include($F=DirName($F)).'/Using.php') break;
  
  $Loader->Using_Module('/FS/IOFS');
  
  $BaseDir=RealPath(__DIR__).'/Res/'; //.'/../Build/VStudio').'/';
  $Imports=[];
  
  $Mode='arg';
  ForEach($argv as $k=>$Arg)
  {
    Echo ' ', $Mode,'=>"', $Arg, '"',"\n";
    switch($Mode)
    {
    case 'arg':
      Switch($Arg)
      {
      case '/project_dir'   : $Mode='project_dir'   ; break;
      case '-project_dir'   : $Mode='project_dir'   ; break;
      case '/solution_dir'  : $Mode='solution_dir'  ; break;
      case '-solution_dir'  : $Mode='solution_dir'  ; break;
      case '/solution_name' : $Mode='solution_name' ; break;
      case '-solution_name' : $Mode='solution_name' ; break;
      case '/modules'       : $Mode='modules'       ; break;
      case '-modules'       : $Mode='modules'       ; break;
      case '/log'           : $Mode='log'           ; break;
      case '-log'           : $Mode='log'           ; break;
      case '/cache'         : $Mode='cache'         ; break;
      case '-cache'         : $Mode='cache'         ; break;
      case '/imports'       : $Mode='imports'       ; break;
      case '-imports'       : $Mode='imports'       ; break;
      case '/studio'        : $Mode='studio'        ; break;
      case '-studio'        : $Mode='studio'        ; break;
      default:
        if($k>0)
          $Loader->Log('Error', 'Arg ', $Arg, ' is unsupported');
      }
      break;
    case 'project_dir'   : $Project_Dir   =NormPath(Str_Replace('\\','/', $Arg)); $Mode='arg'; break;
    case 'solution_dir'  : $Solution_Dir  =NormPath(Str_Replace('\\','/', $Arg)); $Mode='arg'; break;
    case 'solution_name' : $Solution_Name =$Arg; $Mode='arg'; break;
    case 'modules'       : $Modules       =$Arg; $Mode='arg'; break;
    case 'log'           : $LogFile       =$Arg; $Mode='arg'; break;
    case 'cache'         : $CacheDir      =$Arg; $Mode='arg'; break;
    case 'imports'       : $Imports[]     =$Arg; $Mode='arg'; break;
    case 'studio'        : $Studio        =$Arg; $Mode='arg'; break;
    }
  }
  
  $Solution_Dir  ??=$BaseDir;
  $Project_Dir   ??=$Solution_Dir;
  $Solution_Name ??='MySolution';
  $Studio        ??='2010';

  $Modules  ??=RealPath(__DIR__.'/../../../../..');
  $LogFile  ??=__FILE__.'.log'; //'./Hook.log'   ;
  $CacheDir ??=$Modules.'/../.Build'       ;
  
  if($LogFile!=='')
    $Loader->GetLogger()->Add($LogFile);
  
  $Manager=$Loader->Create_Object('/Builder/Manager', [
    'Modules'        =>['Path'=>$Modules],
    'Configurations' =>$Modules.'/Build/Config.php',
    'CacheDir'       =>$CacheDir,
  ]);
  
  if($Manager->Lock())
  {
    $Analyzer=$Loader->Create_Object('/Builder/Program/VS/Builder/Analyzer', [
      'Defines'=>[
      # '_MSVC_LANG'=>'201402L', // /std:c++14
      # '_MSVC_LANG'=>'201703L', // /std:c++17
        '_MSVC_LANG'=>'202002L', // /std:c++20
      ],
      'IntelliSense'=>[
      # 'AdditionalOptions'=>'/std:c++17 -std=c++17',
        'AdditionalOptions'=>'/std:c++20 -std=c++20',
      ],
    ]);
    
    $Analyzer->ProcessBuilder($Manager);
    
    $Solution=$Analyzer->CreateSolution([
      'Studio'      =>$Studio        ,
      'Name'        =>$Solution_Name ,
      'AbsPath'     =>$Solution_Dir  ,
      'VcxAbsPath'  =>$Project_Dir   ,
      'Template_Cache' =>$CacheDir? $CacheDir.'/Tpl/':null,
      'DefArgs'=>[
        'C++'=>[
          'Props'=>[
            'WBuild_Root'  =>['SolutionDir', $Modules  ],
            'WBuild_Cache' =>['SolutionDir', $CacheDir ],
          ],
          'AddImports'=>$Imports,
        ],
      ],
    ]);
    $Analyzer->UpdateDepends();
    $Analyzer->UpdateVSProject($Solution);
    $Analyzer->CreateFolders($Solution);
    $Solution->SaveToFiles($Solution_Dir, $Project_Dir);
    $Manager->UnLock();
  }
  
  $Manager->Done();
  $Loader->Done();
?>