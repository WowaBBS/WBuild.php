<?
  for($F=__FILE__; $F;) if(@include($F=DirName($F)).'/Using.php') break;
  
  if(!IsSet($Modules   )) $Modules  =RealPath('./../../../../..');
  if(!IsSet($LogFile   )) $LogFile  ='./Hook.log'   ;
  if(!IsSet($CachePath )) $CacheDir ='.Build'       ;
  $Mode='arg';
  ForEach($argv as $k=>$Arg)
    switch($Mode)
    {
    case 'arg':
      Switch($Arg)
      {
      case '/modules' : $Mode='modules' ; break;
      case '-modules' : $Mode='modules' ; break;
      case '/log'     : $Mode='log'     ; break;
      case '-log'     : $Mode='log'     ; break;
      case '/cache'   : $Mode='cache'   ; break;
      case '-cache'   : $Mode='cache'   ; break;
      default:
        if($k>0)
          $Loader->Log('Error', 'Arg ', $Arg, ' is unsupported');
      }
      break;
    case 'modules' : $Modules  =$Arg; $Mode='arg';  break;
    case 'log'     : $LogFile  =$Arg; $Mode='arg';  break;
    case 'cache'   : $CacheDir =$Arg; $Mode='arg';  break;
    }

  if($LogFile!=='')
    $Loader->GetLogger()->Add($LogFile);

  // '$(Configuration)|$(Platform)'==
  $Projects=[
    'Build/Editor' ,
    'Build/Game'   ,
  ];
  
  $Configurations=[
    'Debug'       ,
    'Full Debug'  ,
    'Fast Debug'  ,
    'Development' ,
    'Shipping'    ,
  ];
  
  $Targets=[
  //'Win32'=>'Win32' ,
    'Win64'=>'x64'   ,
  ];
  
  $MainTargets=[];
  ForEach($Projects As $Project)
    ForEach($Configurations As $Configuration)
      ForEach($Targets As $Target=>$VcTarget)
      {
        if($Configuration==='Shipping' && $Project==='Build/Editor')
          Continue;
        $Condition=StrTr($Configuration, ' ', '_').'|'.$VcTarget;
        $MainTargets[]=[$Project, $Configuration, $Target, $Condition];
      }
  $Op           ='Hook';
  if(!Is_Dir(__DIR__.'/Res'))
    MkDir(__DIR__.'/Res');
  $BaseDir      =RealPath(__DIR__.'/Res').'/';
//$BaseDir      =RealPath(__DIR__.'/../Build/VStudio').'/';
  echo $BaseDir,"\n";
//$ProjPath     ='WBuild/';
  $ProjPath     =$BaseDir;
  $ProjFiles    =$ProjPath.'Generated.vcxproj.files'   ;
//$ProjFilters  =$ProjPath.'Generated.vcxproj.filters' ;
  $ProjFilters1 =$ProjPath.'Editor.vcxproj.filters' ;
  $ProjFilters2 =$ProjPath.'Game.vcxproj.filters'   ;
  
  $Args=[
    'Modules'        =>['Path'=>$Modules],
    'Configurations' =>$Modules.'/Build/Config.php',
    'CacheDir'       =>$CacheDir,
  ];
  $Manager=$Loader->Create_Object('/Builder/Manager', $Args);
  
  $Analyzer=$Loader->Create_Object('/Builder/Program/VS/Builder/MakeFiles');
  
  $Manager->OnAsset[]=$Analyzer->OnAsset;
  
  ForEach($MainTargets As [$MainTarget, $Config, $Platform, $Condition])
  {
    $Condition="'$(Configuration)|$(Platform)'=='".$Condition."'";
    $Analyzer->BeginConditions($Condition);
    $Module=$Manager->Modules->Get($MainTarget);
    if(!$Module)
    {
      echo '[Error] Module '.$MainTarget." not found\n";
      return;
    }
    $Args=[
      'Configuration' =>$Config   ,
      'Platform'      =>$Platform ,
    ];
    $Context=$Manager->Create_Context($Args);
    $Instance=$Module->CreateInstance($Context);
  //$Tasks=$Instance->Make();
    $Analyzer->OnAsset->Process();
    $Analyzer->EndConditions($Condition);
  }

  $Analyzer->MakeFolders();
  $Analyzer->CreateFiles   ($BaseDir, $ProjFiles    );
  $Analyzer->CreateFilters ($BaseDir, $ProjFilters1 );
  $Analyzer->CreateFilters ($BaseDir, $ProjFilters2 );
  
  $Manager->Done();
  $Loader->Done();
?>