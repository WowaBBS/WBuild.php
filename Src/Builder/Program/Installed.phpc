<?
  $Loader->Parent_Class('/Object');
//$Loader->Load_Class('/Builder/Module');
  $Loader->Load_Type('/System/Delegate');
  $Loader->Load_Lib('/FS/Utils');

  class C_Builder_Program_Installed extends C_Object
  {
    Function _Init(Array $Args)
    {
      parent::_Init($Args);
    }
 
    Protected Function _Done()
    {
      parent::_Done();
    }
    
    Protected $Installed=[];
    
    Function GetPaths()
    {
      return Array_Keys($this->GetList);
    }
    
    Function GetList()
    {
      if($this->Installed)
        return $this->Installed;
      $Reg=$this->Create_Object('/System/Reg');
      $this->Log('Log', 'Search installed Programs');
      $List=$Reg->SearchParam(
        [
          'HKLM\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall',
          'HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall',
          'HKCU\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall',
          'HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall',
        ],
        ['InstallLocation', 'DisplayName'], // 'InstallSource'
        ['Recursive'=>true]
      );
      $Res=[];
      ForEach($List As $Item)
      {
        $InstallLocation =$Item['InstallLocation' ]??false;
        $DisplayName     =$Item['DisplayName'     ]??false;
        if(!$InstallLocation)
          continue;
        $Key=Path_Key($InstallLocation);
        if(!IsSet($Res[$Key]))
          $Res[$Key]=['Path'=>Path_Simplify($InstallLocation)];
        if($DisplayName!==false) $Res[$Key]['Title']=$DisplayName;
      }
      $Reg->Done();
      $this->Installed=$Res;
      return $this->Installed;
    }
  };
?>