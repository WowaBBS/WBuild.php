<?  $Loader->Parent_Class('/Builder/Task/Base');    class C_Builder_Task_Exec extends C_Builder_Task_Base  {    Var $Descr=[];    Var $List=[];        Function Descr() // VarArgs    {      $this->Descr=Implode(func_get_args());      $this->Exec('');      $this->Exec('');      ForEach(Explode("\n", $this->Descr) As $Line)        $this->Exec('Rem '.$Line);      $this->Exec('');    }        Function ToString()    {      return Implode("\r\n", $this->List);    }        Function Exec($Cmd, $Args=null)    {      if($Args!==null)      {        $Args->Prepare($this);        $_Args=$Args->ToString();      }      else        $_Args='';      $this->List[]=$Cmd.' '.$_Args;    //TODO: $Args->CheckObjects    //TODO: $Args->CheckResult      if($Args!==null)      {        $this->Exec('if errorlevel 1 echo Error || exit 1');        $this->Exec('');      }    }    Var $CheckObjects =[];    Var $CheckResult  =[];        Function MkDir($v)    {      $this->Exec('MkDir "'.StrTr($v->GetDirFullPath(), '\\', '/').'"');      $v->MkDir();    }        Function CheckObject($v)    {      $this->CheckObjects[]=$v;    }        Function CheckObjects($l)    {      ForEach($l As $i)        $this->CheckObject($i);    }    Function _CheckFile($v)    {          $this->Exec('if not exist '.$v->GetPath().' echo Can`t find file '.$v->Path.' || exit 1');    }        Function CheckFile($v)    {      $this->CheckObject($v);      if(false)        Echo $v->GetMD5(), ' ', $v->Path, "\n";      $this->_CheckFile($v);    }        Function CheckResultFile($v)    {      $v->InvalidateCache();      $this->_CheckFile($v);      $this->CheckResult[]=$v->GetFileName();    }        Function CheckFiles($l)    {      ForEach($l As $i)        $this->CheckFile($i);    }    Function _GetTaskHash(Array &$Res)    {      Parent::_GetTaskHash($Res);      $Res[]=$this->List;    }  };  $DebM=$Loader->Get_Singleton('/Debug/Manager');  $DebM->AddNoInlineClass('C_Builder_Task_Exec');?>