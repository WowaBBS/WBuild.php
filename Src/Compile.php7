<?
//set_time_limit(1);
  Require_Once 'Using.php';
  
  if(!IsSet($MainTarget    )) $MainTarget    ='UnTarget'     ;
  if(!IsSet($OutTasks      )) $OutTasks      ='Un_tasks.bat' ; //<TODO: Remove
  if(!IsSet($Modules       )) $Modules       ='Un./'         ;
  if(!IsSet($Op            )) $Op            ='Build'        ;
  if(!IsSet($Configuration )) $Configuration ='Release'      ;
  if(!IsSet($Platform      )) $Platform      ='Win32'        ;
  if(!IsSet($LogFile       )) $LogFile       =''             ;
  if(!IsSet($CachePath     )) $CacheDir      ='.Build'       ;
  $Mode='arg';
  ForEach($argv as $k=>$Arg)
    switch($Mode)
    {
    case 'arg':
      Switch($Arg)
      {
      case '/target'        : $Mode='target'        ; break;
      case '-target'        : $Mode='target'        ; break;
      case '/tasks'         : $Mode='tasks'         ; break;
      case '-tasks'         : $Mode='tasks'         ; break;
      case '/modules'       : $Mode='modules'       ; break;
      case '-modules'       : $Mode='modules'       ; break;
      case '/op'            : $Mode='op'            ; break;
      case '-op'            : $Mode='op'            ; break;
      case '/configuration' : $Mode='configuration' ; break;
      case '-configuration' : $Mode='configuration' ; break;
      case '/platform'      : $Mode='platform'      ; break;
      case '-platform'      : $Mode='platform'      ; break;
      case '/log'           : $Mode='log'           ; break;
      case '-log'           : $Mode='log'           ; break;
      case '/cache'         : $Mode='cache'         ; break;
      case '-cache'         : $Mode='cache'         ; break;
      default:
        if($k>0)
          $Loader->Log('Error', 'Arg ', $Arg, ' is unsupported');
      }
      break;
    case 'target'        : $MainTarget    =$Arg; $Mode='arg';  break;
    case 'tasks'         : $OutTasks      =$Arg; $Mode='arg';  break; //<TODO: Remove
    case 'modules'       : $Modules       =$Arg; $Mode='arg';  break;
    case 'op'            : $Op            =$Arg; $Mode='arg';  break;
    case 'configuration' : $Configuration =$Arg; $Mode='arg';  break;
    case 'platform'      : $Platform      =$Arg; $Mode='arg';  break;
    case 'log'           : $LogFile       =$Arg; $Mode='arg';  break;
    case 'cache'         : $CacheDir      =$Arg; $Mode='arg';  break;
    }
    
  switch($Op)
  {
  case 'Build'   :               $bBuild=true; Break;
  case 'ReBuild' : $bClean=true; $bBuild=true; Break;
  case 'Clean'   : $bClean=true;               Break;
  default:
    echo '[Error] Not allowed operator (-op) ',$Op,"\n";
    echo '  Allowed operators:',"\n";
    echo '   -op Build',"\n";
    echo '   -op ReBuild',"\n";
    echo '   -op Clean',"\n";
  }
  
  if($LogFile!=='')
    $Loader->GetLogger()->Add($LogFile);
  $Loader->GetLogger()->Get('Console')->SetLogLevel('Log');
//var_dump($argv);
//return;
 
  $Args=[
    'Modules'=>[$Modules],
    'Configurations'=>$Modules.'/Build/Config.php',
    'CacheDir'=>$CacheDir,
  ];
  $Manager=$Loader->Create_Object('/Builder/Manager', $Args);
  $Args=[
  //'Config'=>['Win32', 'VC'=>-2015, 'Debug'],
    'Assets'=>[
    //['Asset/Include', './Target/Options.Debug.php'],    
    ],
    'Configuration' =>$Configuration ,
    'Platform'      =>$Platform      ,
  ];
  $Context=$Manager->Create_Context($Args);
  $Module=$Manager->Modules->Get($MainTarget);
  if(!$Module)
  {
    echo '[Error] Module '.$MainTarget." not found\n";
    return;
  }
  $Instance=$Module->CreateInstance($Context);

  if($bBuild)
    $Instance->Build();

  $Manager->Done();
  $Loader->Done();
?>